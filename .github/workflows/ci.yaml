name: CI

on:
  push:
    branches:
      - master
    tags:
      - "v*.**"
  pull_request:
    branches: [ master ]
env:
  CRATER_VERSION: 1.0.0
jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0']

    name: PHP ${{ matrix.php }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif

    - name: Install PHP 7 dependencies
      run: composer update --no-interaction --no-progress
      if: "matrix.php < 8"

    - name: Install PHP 8 dependencies
      run: composer update --ignore-platform-req=php --no-interaction --no-progress
      if: "matrix.php >= 8"

    - name: Check coding style
      run: ./vendor/bin/php-cs-fixer fix -v --dry-run --using-cache=no --config=.php-cs-fixer.dist.php

    - name: Unit Tests
      run: php ./vendor/bin/pest
  docker:
    if: ${{ needs.build-test.result == 'success' && github.event_name != 'pull_request'}}
# env is not avaialble in context of evaluating condition or building another env. workaround was to use seperate steps to construct VERSION_TAG env variable
    # env:
        # VERSION_TAG: ${{ startsWith(github.ref, 'refs/tags/v') && env.CRATER_VERSION || env.CRATER_VERSION-github.run_number }}
    name: Docker build and publish
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
    - name: check if prod release
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "VERSION_TAG=${{ env.CRATER_VERSION }}"
        echo "VERSION_TAG=${{ env.CRATER_VERSION }}" >> $GITHUB_ENV
    - name: check if dev release
      if: startsWith(github.ref, 'refs/tags/v') != true
      run: |
        echo "VERSION_TAG=${{ env.CRATER_VERSION }}-${{ github.run_number }}"
        echo "VERSION_TAG=${{ env.CRATER_VERSION }}-${{ github.run_number }}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Docker Build and push crater-php
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/Dockerfile
        push: true
        tags: craterapp/crater-php:${{env.VERSION_TAG}},craterapp/crater-php:latest
    - name: Docker Build and push crater-nginx
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/nginx.Dockerfile
        push: true
        tags: craterapp/crater-nginx:${{env.VERSION_TAG}},craterapp/crater-nginx:latest
